
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    gzip on;
    #该指令用于开启或关闭gzip模块(on/off)

    gzip_buffers 16 8k;
    #设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。16 8k代表以8k为单位，安装原始数据大小以8k为单位的16倍申请内存

    gzip_comp_level 6;
    #gzip压缩比，数值范围是1-9，1压缩比最小但处理速度最快，9压缩比最大但处理速度最慢

    gzip_http_version 1.1;
    #识别http的协议版本

    gzip_min_length 256;
    #设置允许压缩的页面最小字节数，页面字节数从header头得content-length中进行获取。默认值是0，不管页面多大都压缩。这里我设置了为256

    gzip_proxied any;
    #这里设置无论header头是怎么样，都是无条件启用压缩

    gzip_vary on;
    #在http header中添加Vary: Accept-Encoding ,给代理服务器用的

    gzip_types
        text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
        text/javascript application/javascript application/x-javascript
        text/x-json application/json application/x-web-app-manifest+json
        text/css text/plain text/x-component
        font/opentype font/ttf application/x-font-ttf application/vnd.ms-fontobject
        image/x-icon;
    #进行压缩的文件类型,这里特别添加了对字体的文件类型

    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    #禁用IE 6 gzip


    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream static_project {   
        server 127.0.0.1:7778;
    }


    # server {
    #     listen       80;
    #     server_name  www.flove.icu;

    #     #charset koi8-r;

    #     #access_log  logs/host.access.log  main;
    #     #配置默认主页
    #     location / {
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_pass http://static_project; 
    #         ## 静态服务端口
    #     }


    #     #error_page  404              /404.html;

    #     # redirect server error pages to the static page /50x.html
    #     #
    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   html;
    #     }

    # }

    server {
        listen       80;
        server_name  http://47.104.71.163;

        #charset koi8-r;
        # 接口代理，react-admin商城需要
        location /api/ {
            proxy_pass http://127.0.0.1:8888;
        }

        #access_log  logs/host.access.log  main;
        #配置默认主页
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://static_project; 
            expires 7d; # 缓存 7 天
            ## 静态服务端口
        }

        # location / {
        #     root /var/www/project/;
        #     index index.html;
        # }
        # location /users/ {
        #     proxy_pass http://127.0.0.1:3000/users;
        #   }
        # location /cart/ {
        #     proxy_pass http://127.0.0.1:3000/cart;
        #   }
        # location /goods/* {
        #     proxy_pass http://127.0.0.1:3000/goods;
        #   }
        # location /address/* {
        #     proxy_pass http://127.0.0.1:3000/address;
        #   }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
